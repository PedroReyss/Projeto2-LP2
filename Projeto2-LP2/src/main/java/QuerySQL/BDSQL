-- Tabela Departamento
CREATE TABLE Departamento (
    id INT PRIMARY KEY IDENTITY(1,1),
    nome VARCHAR(100) NOT NULL
);

-- Tabela Cargo
CREATE TABLE Cargo (
    id INT PRIMARY KEY IDENTITY(1,1),
    nome VARCHAR(100) NOT NULL,
    SalarioBase DECIMAL(10,2) NOT NULL
);

CREATE TABLE Pessoa (
    id INT PRIMARY KEY IDENTITY(1,1),
    nome VARCHAR(100) NOT NULL,
    CPF VARCHAR(11) UNIQUE NOT NULL,
    tipo_pessoa VARCHAR(20) NOT NULL CHECK (tipo_pessoa IN ('FUNCIONARIO', 'TERCEIRIZADO', 'VISITANTE')),

    -- Campos de Funcionario (podem ser NULL para outros tipos)
    data_nascimento DATE NULL,
    matricula VARCHAR(5) NULL,
    id_cargo INT NULL,
    id_departamento INT NULL,

    -- Campos de Terceirizado
    funcao VARCHAR(100) NULL,
    empresa_prestadora VARCHAR(100) NULL,
    data_inicio_contrato DATE NULL,
    data_fim_contrato DATE NULL,
    id_responsavel INT NULL,
    id_departamento_terceirizado INT NULL,

    -- Campos de Visitante
    motivo_visita VARCHAR(200) NULL,
    data_hora_entrada DATETIME NULL,
    data_hora_saida DATETIME NULL,
    id_funcionario_visitado INT NULL,
    id_departamento_visitado INT NULL,
    numero_cracha VARCHAR(10) NULL,

    -- Foreign Keys
    FOREIGN KEY (id_cargo) REFERENCES Cargo(id),
    FOREIGN KEY (id_departamento) REFERENCES Departamento(id),
    FOREIGN KEY (id_departamento_terceirizado) REFERENCES Departamento(id),
    FOREIGN KEY (id_responsavel) REFERENCES Pessoa(id),
    FOREIGN KEY (id_funcionario_visitado) REFERENCES Pessoa(id),
    FOREIGN KEY (id_departamento_visitado) REFERENCES Departamento(id)
);

-- Tabela Projeto
CREATE TABLE Projeto (
    id INT PRIMARY KEY IDENTITY(1,1),
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    data_inicio DATETIME NOT NULL,
    data_termino DATETIME
);

-- Tabela de relacionamento Funcionario_Projeto
CREATE TABLE Funcionario_Projeto (
    id INT PRIMARY KEY IDENTITY(1,1),
    id_funcionario INT NOT NULL,
    id_projeto INT NOT NULL,
    data_inicio DATE NOT NULL,
    data_fim DATE,
    FOREIGN KEY (id_funcionario) REFERENCES Pessoa(id),
    FOREIGN KEY (id_projeto) REFERENCES Projeto(id)
);

-- Tabela HistoricoCargo
CREATE TABLE HistoricoCargo (
    id INT PRIMARY KEY IDENTITY(1,1),
    id_funcionario INT NOT NULL,
    id_cargo INT NOT NULL,
    data_inicio DATETIME NOT NULL,
    data_fim DATETIME,
    FOREIGN KEY (id_funcionario) REFERENCES Pessoa(id),
    FOREIGN KEY (id_cargo) REFERENCES Cargo(id)
);

-- TABELA PONTO ATUALIZADA (agora referencia Pessoa)
CREATE TABLE Ponto (
    id INT PRIMARY KEY IDENTITY(1,1),
    id_pessoa INT NOT NULL,
    data_hora DATETIME NOT NULL,
    tipo VARCHAR(10) NOT NULL CHECK (tipo IN ('entrada', 'saida')),
    FOREIGN KEY (id_pessoa) REFERENCES Pessoa(id)
);

-- TABELA ATIVIDADE ATUALIZADA (agora referencia Pessoa)
CREATE TABLE Atividade (
    id INT PRIMARY KEY IDENTITY(1,1),
    id_funcionario INT NOT NULL,
    descricao TEXT NOT NULL,
    data_registro DATETIME NOT NULL,
    horas_trabalhadas DECIMAL(4,2),
    FOREIGN KEY (id_funcionario) REFERENCES Pessoa(id)
);

-- TABELA DE ASSOCIAÇÃO TERCEIRIZADO-DEPARTAMENTO (se ainda precisar)
CREATE TABLE Terceirizado_Departamento (
    id INT PRIMARY KEY IDENTITY(1,1),
    id_terceirizado INT NOT NULL,
    id_departamento INT NOT NULL,
    FOREIGN KEY (id_terceirizado) REFERENCES Pessoa(id),
    FOREIGN KEY (id_departamento) REFERENCES Departamento(id)
);